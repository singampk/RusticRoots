services:
  # PostgreSQL Database
  database:
    image: postgres:15
    container_name: rustic-roots-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: rustic_roots
      POSTGRES_USER: rustic_admin
      POSTGRES_PASSWORD: RusticRoots2024!
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init-with-data.sql:/docker-entrypoint-initdb.d/init-with-data.sql:ro
    ports:
      - "5432:5432"
    networks:
      - rustic-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rustic_admin -d rustic_roots"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Next.js Application
  app:
    image: node:18-alpine
    container_name: rustic-roots-app
    restart: unless-stopped
    working_dir: /app
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://rustic_admin:RusticRoots2024!@database:5432/rustic_roots?sslmode=disable
      NEXTAUTH_SECRET: your-super-secret-key-here
      NEXTAUTH_URL: http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      database:
        condition: service_healthy
    networks:
      - rustic-network
    command: sh -c "
      echo 'Installing dependencies...' &&
      npm install --ignore-scripts &&
      echo 'Installing Prisma CLI globally...' &&
      npm install -g prisma &&
      echo 'Generating Prisma client...' &&
      npx prisma generate &&
      echo 'Starting development server...' &&
      npm run dev -- --hostname 0.0.0.0
      "

volumes:
  postgres_data:

networks:
  rustic-network:
    driver: bridge