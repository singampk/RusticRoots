services:
  # PostgreSQL Database
  database:
    image: postgres:15
    container_name: rusticroots-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: rustic_roots
      POSTGRES_USER: rustic_admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-RusticRoots2024!}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init-with-data.sql:/docker-entrypoint-initdb.d/init-with-data.sql:ro
    networks:
      - rusticroots-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rustic_admin -d rustic_roots"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    image: singampk/rusticroots:latest
    container_name: rusticroots-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://rustic_admin:${POSTGRES_PASSWORD:-RusticRoots2024!}@database:5432/rustic_roots?sslmode=disable
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-change-this-in-production}
      NEXTAUTH_URL: https://therusticroots.com.au
      AWS_REGION: ${AWS_REGION:-ap-southeast-2}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME:-}
    depends_on:
      database:
        condition: service_healthy
    networks:
      - rusticroots-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/products"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: rusticroots-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - rusticroots-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/products"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: rusticroots-certbot
    restart: "no"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email admin@therusticroots.com.au --agree-tos --no-eff-email -d therusticroots.com.au -d www.therusticroots.com.au

volumes:
  postgres_data:
  nginx_logs:

networks:
  rusticroots-network:
    driver: bridge