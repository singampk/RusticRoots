services:
  # Next.js Application
  app:
    image: singampk/rusticroots:v1.6.1
    container_name: rusticroots-app-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://rustic_user:${POSTGRES_PASSWORD:-<>>}@<>>.cli0gkwcy4ii.ap-southeast-2.rds.amazonaws.com:5432/rustic_roots?sslmode=require
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-<>>}
      NEXTAUTH_URL: https://therusticroots.com.au
      # AWS S3 Configuration (uncomment and set values to enable S3 uploads)
      AWS_REGION: ${AWS_REGION:-ap-southeast-2}
      AWS_ACCESS_KEY_ID: <>
      AWS_SECRET_ACCESS_KEY: <>
      AWS_S3_BUCKET_NAME: files.therusticroots.com.au
    expose:
      - "3000"
    networks:
      - backend
      - frontend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx SSL Proxy
  nginx:
    image: nginx:alpine
    container_name: rusticroots-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/ssl-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - frontend
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Certbot for SSL Certificate Management
  certbot:
    image: certbot/certbot
    container_name: rusticroots-certbot
    restart: "no"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: echo "Certbot ready for certificate operations"
    networks:
      - frontend

volumes:
  postgres_data_prod:
  nginx_logs:

networks:
  frontend:
  backend:
    internal: true