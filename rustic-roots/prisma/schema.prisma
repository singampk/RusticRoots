// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  RECEIVED_ORDER
  REVIEWING_ORDER
  WORK_IN_PROGRESS
  IN_SHIPPING
  DELIVERED
}

enum PromotionType {
  FIXED_AMOUNT
  PERCENTAGE
}

enum PromotionUsageType {
  ONE_TIME
  MULTIPLE_USE
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  products      Product[]
  orders        Order[]
  promotions    Promotion[]
  promotionUsages PromotionUsage[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Float
  images      String[]
  category    String
  stock       Int
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  owner       User     @relation(fields: [ownerId], references: [id])
  ownerId     String
  orders      Order[]  @relation("OrderProducts")
  orderItems  OrderItem[]
}

model Order {
  id                String      @id @default(uuid())
  total             Float
  subtotal          Float
  discountAmount    Float       @default(0)
  status            OrderStatus @default(RECEIVED_ORDER)
  notes             String?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  items             OrderItem[]
  user              User        @relation(fields: [userId], references: [id])
  userId            String
  products          Product[]   @relation("OrderProducts")
  promotion         Promotion?  @relation(fields: [promotionId], references: [id])
  promotionId       String?
  promotionCode     String?
  promotionSnapshot Json?
  promotionUsages   PromotionUsage[]
}

model OrderItem {
  id        String  @id @default(uuid())
  quantity  Int
  price     Float
  product   Product @relation(fields: [productId], references: [id])
  productId String
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
}

model Promotion {
  id            String            @id @default(uuid())
  name          String
  description   String?
  code          String            @unique
  type          PromotionType
  value         Float
  usageType     PromotionUsageType
  maxUses       Int?
  currentUses   Int               @default(0)
  minOrderValue Float?
  maxDiscount   Float?
  isActive      Boolean           @default(true)
  startDate     DateTime
  endDate       DateTime
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  createdBy     User              @relation(fields: [createdById], references: [id])
  createdById   String
  orders        Order[]
  usages        PromotionUsage[]
}

model PromotionUsage {
  id          String    @id @default(uuid())
  promotion   Promotion @relation(fields: [promotionId], references: [id])
  promotionId String
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  order       Order     @relation(fields: [orderId], references: [id])
  orderId     String
  usedAt      DateTime  @default(now())
  
  @@unique([promotionId, userId, orderId])
}
