services:
  # PostgreSQL Database
  database:
    image: postgres:15
    container_name: rusticroots-database-local
    restart: unless-stopped
    environment:
      POSTGRES_DB: rustic_roots
      POSTGRES_USER: rustic_admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-RusticRoots2024!}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_local:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rustic_admin -d rustic_roots"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    image: singampk/rustic-roots:v1.1.0
    container_name: rusticroots-app-local
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://rustic_admin:${POSTGRES_PASSWORD:-RusticRoots2024!}@database:5432/rustic_roots?sslmode=disable
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-change-this-secret-key-for-local-testing}
      NEXTAUTH_URL: http://localhost:3000
      AWS_REGION: ${AWS_REGION:-ap-southeast-2}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME:-}
    ports:
      - "3000:3000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/products"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data_local:

networks:
  backend:
    driver: bridge